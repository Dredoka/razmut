import React, { useState, useEffect } from 'react';
import { useUser } from '../context/UserContext'; // <-- –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç

function Profile() {
  const { user } = useUser(); // –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const isAdmin = user?.role === 'admin'; // –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∞–¥–º–∏–Ω –ª–∏ –æ–Ω

  const [users, setUsers] = useState([]);       // —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
  const [selectedId, setSelectedId] = useState(null); // –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  const [name, setName] = useState('');
  const [avatar, setAvatar] = useState('');
  const [loading, setLoading] = useState(true);

  // üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  useEffect(() => {
    if (isAdmin) {
      fetch('http://localhost:8080/api/users')
        .then(res => res.json())
        .then(data => setUsers(data))
        .finally(() => setLoading(false));
    } else {
      const userId = user?.id || 1; // –µ—Å–ª–∏ –Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ID=1
      fetch(`http://localhost:8080/api/users/${userId}`)
        .then(res => {
          if (!res.ok) throw new Error('not found');
          return res.json();
        })
        .then(data => {
          setSelectedId(data.id);
          setName(data.name || '');
          setAvatar(data.avatarUrl || '');
        })
        .finally(() => setLoading(false));
    }
  }, [isAdmin, user]);

  // üîπ –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –∞–¥–º–∏–Ω–∞)
  const handleSelectUser = (user) => {
    setSelectedId(user.id);
    setName(user.name);
    setAvatar(user.avatarUrl);
  };

  // üîπ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å (–æ–±–Ω–æ–≤–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å)
  const handleSave = () => {
    const userData = { name, avatarUrl: avatar };
    const url = selectedId ? `http://localhost:8080/api/users/${selectedId}` : 'http://localhost:8080/api/users';
    const method = selectedId ? 'PUT' : 'POST';

    fetch(url, {
      method,
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(userData),
    })
      .then(res => res.json())
      .then(data => {
        alert(selectedId ? '–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω!' : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å ID ${data.id}`);
        if (isAdmin) {
          setUsers(prev => selectedId
            ? prev.map(u => u.id === data.id ? data : u)
            : [...prev, data]
          );
        }
        setSelectedId(data.id);
        setName(data.name);
        setAvatar(data.avatarUrl);
      })
      .catch(err => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:', err));
  };

  // üîπ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleDelete = () => {
    if (!selectedId) return;
    if (!window.confirm('–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?')) return;

    fetch(`http://localhost:8080/api/users/${selectedId}`, { method: 'DELETE' })
      .then(res => {
        if (res.ok) {
          alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω!');
          if (isAdmin) setUsers(prev => prev.filter(u => u.id !== selectedId));
          setSelectedId(null);
          setName('');
          setAvatar('');
        } else {
          alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏');
        }
      })
      .catch(err => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:', err));
  };

  // üîπ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const handleCreateNew = () => {
    setSelectedId(null);
    setName('');
    setAvatar('');
  };

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;

  return (
    <div>
      <h2>–ü—Ä–æ—Ñ–∏–ª—å</h2>

      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫—Ç–æ –≤–æ—à—ë–ª */}
      <p>–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{user?.name || '–ì–æ—Å—Ç—å'}</b> {isAdmin && '(–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)'}</p>

      {/* –ï—Å–ª–∏ –∞–¥–º–∏–Ω ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      {isAdmin && (
        <div style={{ marginBottom: 20 }}>
          <h3>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</h3>
          {users.map(u => (
            <button
              key={u.id}
              onClick={() => handleSelectUser(u)}
              style={{
                margin: '4px',
                fontWeight: selectedId === u.id ? 'bold' : 'normal'
              }}
            >
              {u.name || `ID ${u.id}`}
            </button>
          ))}
          <button
            onClick={handleCreateNew}
            style={{ marginLeft: 10, backgroundColor: 'green', color: 'white' }}
          >
            –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ
          </button>
        </div>
      )}

      {/* –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è */}
      <div style={{ marginTop: 20 }}>
        <img
          src={avatar || 'https://picsum.photos/100'}
          alt="–ê–≤–∞—Ç–∞—Ä"
          width={100}
          style={{ borderRadius: '50%' }}
        />
        <div>
          <p>–ò–º—è:</p>
          <input value={name} onChange={e => setName(e.target.value)} />
        </div>
        <div style={{ marginTop: '10px' }}>
          <p>–°—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤–∞—Ç–∞—Ä:</p>
          <input value={avatar} onChange={e => setAvatar(e.target.value)} />
        </div>
        <button onClick={handleSave} style={{ marginTop: '10px', marginRight: 10 }}>
          {selectedId ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' : '–°–æ–∑–¥–∞—Ç—å'}
        </button>
        {isAdmin && selectedId && (
          <button
            onClick={handleDelete}
            style={{ marginTop: '10px', backgroundColor: 'red', color: 'white' }}
          >
            –£–¥–∞–ª–∏—Ç—å
          </button>
        )}
      </div>
    </div>
  );
}

export default Profile;
